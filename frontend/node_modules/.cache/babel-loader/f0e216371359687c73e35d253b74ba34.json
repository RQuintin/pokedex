{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst URL = \"https://pokeapi.co/api/v2/pokemon?limit=10\";\nconst initialState = {\n  pokemonList: []\n};\n\nconst pokemonExists = (arr, val) => {\n  return arr.some(arrVal => val === arrVal);\n};\n\nexport const pokemonCardsSlice = createSlice({\n  name: \"pokemonCards\",\n  initialState: initialState,\n  reducers: {\n    getData: (state, action) => {\n      const existingPokeIds = state.pokemonList.map(poke => poke.id);\n\n      if (pokemonExists(existingPokeIds, action.payload.id)) {}\n    }\n  }\n});\nexport const {\n  getData\n} = pokemonCardsSlice.actions;\nexport const fetchPokemonNameUrl = () => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(URL);\n      const data = response.data.results;\n      data.map(async poke => {\n        const responseDetails = await axios.get(poke.url);\n        let tempDetails = {\n          id: responseDetails.data.id,\n          name: responseDetails.data.species.name,\n          baseExperience: responseDetails.data.base_experience,\n          height: responseDetails.data.height,\n          weight: responseDetails.data.weight,\n          type: responseDetails.data.types[0].type.name,\n          sprites: responseDetails.data.sprites.front_default\n        };\n        dispatch(getData(tempDetails));\n      });\n    } catch (e) {\n      console.log(\"Could not fetch data.\");\n    }\n  };\n};\nexport const selectorPokemon = state => state.pokemon.pokemonList;\nexport default pokemonCardsSlice.reducer;","map":{"version":3,"sources":["/home/akshaj/projects_js/pokedex/src/features/explore/pokemonCardsSlice.js"],"names":["createSlice","axios","URL","initialState","pokemonList","pokemonExists","arr","val","some","arrVal","pokemonCardsSlice","name","reducers","getData","state","action","existingPokeIds","map","poke","id","payload","actions","fetchPokemonNameUrl","dispatch","response","get","data","results","responseDetails","url","tempDetails","species","baseExperience","base_experience","height","weight","type","types","sprites","front_default","e","console","log","selectorPokemon","pokemon","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,4CAAZ;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AADM,CAArB;;AAIA,MAAMC,aAAa,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClC,SAAOD,GAAG,CAACE,IAAJ,CAASC,MAAM,IAAIF,GAAG,KAAKE,MAA3B,CAAP;AACD,CAFD;;AAIA,OAAO,MAAMC,iBAAiB,GAAGV,WAAW,CAAC;AAC3CW,EAAAA,IAAI,EAAE,cADqC;AAE3CR,EAAAA,YAAY,EAAEA,YAF6B;AAG3CS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1B,YAAMC,eAAe,GAAGF,KAAK,CAACV,WAAN,CAAkBa,GAAlB,CAAsBC,IAAI,IAAIA,IAAI,CAACC,EAAnC,CAAxB;;AACA,UAAId,aAAa,CAACW,eAAD,EAAkBD,MAAM,CAACK,OAAP,CAAeD,EAAjC,CAAjB,EAAuD,CACtD;AACF;AALO;AAHiC,CAAD,CAArC;AAYP,OAAO,MAAM;AAAEN,EAAAA;AAAF,IAAcH,iBAAiB,CAACW,OAAtC;AAEP,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACvC,SAAO,MAAMC,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CAAUvB,GAAV,CAAvB;AACA,YAAMwB,IAAI,GAAGF,QAAQ,CAACE,IAAT,CAAcC,OAA3B;AAEAD,MAAAA,IAAI,CAACT,GAAL,CAAS,MAAMC,IAAN,IAAc;AACrB,cAAMU,eAAe,GAAG,MAAM3B,KAAK,CAACwB,GAAN,CAAUP,IAAI,CAACW,GAAf,CAA9B;AAEA,YAAIC,WAAW,GAAG;AAChBX,UAAAA,EAAE,EAAES,eAAe,CAACF,IAAhB,CAAqBP,EADT;AAEhBR,UAAAA,IAAI,EAAEiB,eAAe,CAACF,IAAhB,CAAqBK,OAArB,CAA6BpB,IAFnB;AAGhBqB,UAAAA,cAAc,EAAEJ,eAAe,CAACF,IAAhB,CAAqBO,eAHrB;AAIhBC,UAAAA,MAAM,EAAEN,eAAe,CAACF,IAAhB,CAAqBQ,MAJb;AAKhBC,UAAAA,MAAM,EAAEP,eAAe,CAACF,IAAhB,CAAqBS,MALb;AAMhBC,UAAAA,IAAI,EAAER,eAAe,CAACF,IAAhB,CAAqBW,KAArB,CAA2B,CAA3B,EAA8BD,IAA9B,CAAmCzB,IANzB;AAOhB2B,UAAAA,OAAO,EAAEV,eAAe,CAACF,IAAhB,CAAqBY,OAArB,CAA6BC;AAPtB,SAAlB;AAUAhB,QAAAA,QAAQ,CAACV,OAAO,CAACiB,WAAD,CAAR,CAAR;AACD,OAdD;AAeD,KAnBD,CAmBE,OAAOU,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD;AACF,GAvBD;AAwBD,CAzBM;AA2BP,OAAO,MAAMC,eAAe,GAAG7B,KAAK,IAAIA,KAAK,CAAC8B,OAAN,CAAcxC,WAA/C;AAEP,eAAeM,iBAAiB,CAACmC,OAAjC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\nimport axios from \"axios\"\n\nconst URL = \"https://pokeapi.co/api/v2/pokemon?limit=10\"\n\nconst initialState = {\n  pokemonList: [],\n}\n\nconst pokemonExists = (arr, val) => {\n  return arr.some(arrVal => val === arrVal)\n}\n\nexport const pokemonCardsSlice = createSlice({\n  name: \"pokemonCards\",\n  initialState: initialState,\n  reducers: {\n    getData: (state, action) => {\n      const existingPokeIds = state.pokemonList.map(poke => poke.id)\n      if (pokemonExists(existingPokeIds, action.payload.id)) {\n      }\n    },\n  },\n})\n\nexport const { getData } = pokemonCardsSlice.actions\n\nexport const fetchPokemonNameUrl = () => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(URL)\n      const data = response.data.results\n\n      data.map(async poke => {\n        const responseDetails = await axios.get(poke.url)\n\n        let tempDetails = {\n          id: responseDetails.data.id,\n          name: responseDetails.data.species.name,\n          baseExperience: responseDetails.data.base_experience,\n          height: responseDetails.data.height,\n          weight: responseDetails.data.weight,\n          type: responseDetails.data.types[0].type.name,\n          sprites: responseDetails.data.sprites.front_default,\n        }\n\n        dispatch(getData(tempDetails))\n      })\n    } catch (e) {\n      console.log(\"Could not fetch data.\")\n    }\n  }\n}\n\nexport const selectorPokemon = state => state.pokemon.pokemonList\n\nexport default pokemonCardsSlice.reducer\n"]},"metadata":{},"sourceType":"module"}