{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\"; // intialize a counter for collection id.\n\nlet collectionId = 1;\nconst initialState = {\n  collectionList: []\n};\nexport const collectionSlice = createSlice({\n  name: \"collection\",\n  initialState: initialState,\n  reducers: {\n    // create a collection\n    create: (state, action) => {\n      const doesCollectionNameExist = state.collectionList.find(cn => cn.name === action.payload);\n      state.collectionList.push({\n        id: collectionId,\n        name: action.payload,\n        pokemons: []\n      });\n      collectionId++;\n    },\n    // add pokemon to a collection\n    add: (state, action) => {\n      // get the index of the selected collection in the collectionList array using the collection ID.\n      const collectionListIndex = state.collectionList.findIndex(x => x.id === action.payload.id); // If collection exists, then push the pokemon in it.\n\n      if (collectionListIndex !== -1) {\n        if ( // If a pokemon with the same name already exists, do not put into the list.\n        // Instead, alert the user.\n        state.collectionList[collectionListIndex].pokemons.includes(action.payload.pokemon)) {\n          alert(`${action.payload.pokemon} already exists in collection.`);\n        } else {\n          state.collectionList[collectionListIndex].pokemons.push(action.payload.pokemon);\n        }\n      }\n    },\n    // remove a collection.\n    remove: (state, action) => {\n      const collectionIdToRemove = action.payload.id;\n      const collectionIdRemoveIndex = state.collectionList.findIndex(col => col.id === collectionIdToRemove);\n\n      if (collectionIdRemoveIndex !== -1) {\n        state.collectionList.splice(collectionIdRemoveIndex, 1);\n      }\n    },\n    // Edit collection name and pokemon in it.\n    edit: (state, action) => {\n      const collectionIdToEdit = action.payload.id;\n      const editedName = action.payload.editedName;\n      const editedPokemonList = action.payload.editedPokemonList;\n      const collectionIdEditIndex = state.collectionList.findIndex(col => col.id === collectionIdToEdit);\n\n      if (collectionIdEditIndex !== -1) {\n        state.collectionList[collectionIdEditIndex].name = editedName;\n        state.collectionList[collectionIdEditIndex].pokemons = editedPokemonList;\n      }\n    }\n  }\n});\nexport const selectorCollection = state => state.collection.collectionList;\nexport const {\n  create,\n  add,\n  remove,\n  edit\n} = collectionSlice.actions;\nexport default collectionSlice.reducer;","map":{"version":3,"sources":["/home/akshaj/projects_js/pokedex/src/features/home/collectionSlice.js"],"names":["createSlice","collectionId","initialState","collectionList","collectionSlice","name","reducers","create","state","action","doesCollectionNameExist","find","cn","payload","push","id","pokemons","add","collectionListIndex","findIndex","x","includes","pokemon","alert","remove","collectionIdToRemove","collectionIdRemoveIndex","col","splice","edit","collectionIdToEdit","editedName","editedPokemonList","collectionIdEditIndex","selectorCollection","collection","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\n\n// intialize a counter for collection id.\nlet collectionId = 1\n\nconst initialState = {\n  collectionList: [],\n}\n\nexport const collectionSlice = createSlice({\n  name: \"collection\",\n  initialState: initialState,\n  reducers: {\n    // create a collection\n    create: (state, action) => {\n      const doesCollectionNameExist = state.collectionList.find(\n        cn => cn.name === action.payload\n      )\n\n      state.collectionList.push({\n        id: collectionId,\n        name: action.payload,\n        pokemons: [],\n      })\n      collectionId++\n    },\n    // add pokemon to a collection\n    add: (state, action) => {\n      // get the index of the selected collection in the collectionList array using the collection ID.\n      const collectionListIndex = state.collectionList.findIndex(\n        x => x.id === action.payload.id\n      )\n\n      // If collection exists, then push the pokemon in it.\n      if (collectionListIndex !== -1) {\n        if (\n          // If a pokemon with the same name already exists, do not put into the list.\n          // Instead, alert the user.\n          state.collectionList[collectionListIndex].pokemons.includes(\n            action.payload.pokemon\n          )\n        ) {\n          alert(`${action.payload.pokemon} already exists in collection.`)\n        } else {\n          state.collectionList[collectionListIndex].pokemons.push(\n            action.payload.pokemon\n          )\n        }\n      }\n    },\n    // remove a collection.\n    remove: (state, action) => {\n      const collectionIdToRemove = action.payload.id\n\n      const collectionIdRemoveIndex = state.collectionList.findIndex(\n        col => col.id === collectionIdToRemove\n      )\n\n      if (collectionIdRemoveIndex !== -1) {\n        state.collectionList.splice(collectionIdRemoveIndex, 1)\n      }\n    },\n    // Edit collection name and pokemon in it.\n    edit: (state, action) => {\n      const collectionIdToEdit = action.payload.id\n      const editedName = action.payload.editedName\n      const editedPokemonList = action.payload.editedPokemonList\n\n      const collectionIdEditIndex = state.collectionList.findIndex(\n        col => col.id === collectionIdToEdit\n      )\n\n      if (collectionIdEditIndex !== -1) {\n        state.collectionList[collectionIdEditIndex].name = editedName\n        state.collectionList[collectionIdEditIndex].pokemons = editedPokemonList\n      }\n    },\n  },\n})\n\nexport const selectorCollection = state => state.collection.collectionList\nexport const { create, add, remove, edit } = collectionSlice.actions\nexport default collectionSlice.reducer\n"]},"metadata":{},"sourceType":"module"}