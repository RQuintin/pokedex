{"ast":null,"code":"/** @jsx jsx */import{jsx,css}from\"@emotion/core\";import PokemonCard from\"./components/PokemonCard\";import{useState,useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{fetchPokemonNameUrl,selectorFilteredPokemon,selectorPokemon}from\"./pokemonCardsSlice\";var PokemonCards=function PokemonCards(){var dispatch=useDispatch();// A state array that contains all the pokemon fetched from the API.\nvar pokemonList=useSelector(selectorPokemon);// A state array that contains an array of pokemon that match the search filter.\nvar filteredPokemonList=useSelector(selectorFilteredPokemon);// Fetch pokemon by dispatching the action.\nuseEffect(function(){dispatch(fetchPokemonNameUrl());},[dispatch]);return jsx(\"div\",{css:{\"padding\":\"0.5rem\",\"@media (min-width: 768px)\":{\"padding\":\"1rem\"}}},jsx(\"ul\",null,jsx(\"div\",{css:{\"display\":\"grid\",\"gridTemplateColumns\":\"repeat(1, minmax(0, 1fr))\",\"gap\":\"0.5rem\",\"@media (min-width: 640px)\":{\"gridTemplateColumns\":\"repeat(2, minmax(0, 1fr))\"},\"@media (min-width: 768px)\":{\"gap\":\"0.75rem\"},\"@media (min-width: 1024px)\":{\"gridTemplateColumns\":\"repeat(3, minmax(0, 1fr))\",\"gap\":\"1rem\"},\"@media (min-width: 1280px)\":{\"gridTemplateColumns\":\"repeat(4, minmax(0, 1fr))\"}}},filteredPokemonList[0]===\"xxx\"?\"No Pokemon found.\":filteredPokemonList.length===0?pokemonList.map(function(poke){return jsx(PokemonCard,{key:\"key-\".concat(poke.id),pokemonId:poke.id,pokemonName:poke.name,pokemonType:poke.type,pokemonHeight:poke.height,pokemonWeight:poke.weight,pokemonBaseExperience:poke.baseExperience,pokemonSprite:poke.sprites});}):filteredPokemonList.map(function(poke){return jsx(PokemonCard,{key:\"key-\".concat(poke.id),pokemonId:poke.id,pokemonName:poke.name,pokemonType:poke.type,pokemonHeight:poke.height,pokemonWeight:poke.weight,pokemonBaseExperience:poke.baseExperience,pokemonSprite:poke.sprites});}))));};export default PokemonCards;","map":{"version":3,"sources":["/home/akshaj/projects_js/pokedex/frontend/src/features/explore/PokemonCards.js"],"names":["jsx","css","PokemonCard","useState","useEffect","useDispatch","useSelector","fetchPokemonNameUrl","selectorFilteredPokemon","selectorPokemon","PokemonCards","dispatch","pokemonList","filteredPokemonList","length","map","poke","id","name","type","height","weight","baseExperience","sprites"],"mappings":"AAAA,eACA,OAASA,GAAT,CAAcC,GAAd,KAAyB,eAAzB,CAGA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,CAEA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OACEC,mBADF,CAEEC,uBAFF,CAGEC,eAHF,KAIO,qBAJP,CAMA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CACA;AACA,GAAMO,CAAAA,WAAW,CAAGN,WAAW,CAACG,eAAD,CAA/B,CACA;AACA,GAAMI,CAAAA,mBAAmB,CAAGP,WAAW,CAACE,uBAAD,CAAvC,CAEA;AACAJ,SAAS,CAAC,UAAM,CACdO,QAAQ,CAACJ,mBAAmB,EAApB,CAAR,CACD,CAFQ,CAEN,CAACI,QAAD,CAFM,CAAT,CAIA,MACE,qFACE,cACE,iZAIGE,mBAAmB,CAAC,CAAD,CAAnB,GAA2B,KAA3B,CACG,mBADH,CAEGA,mBAAmB,CAACC,MAApB,GAA+B,CAA/B,CACAF,WAAW,CAACG,GAAZ,CAAgB,SAAAC,IAAI,QAClB,KAAC,WAAD,EACE,GAAG,eAASA,IAAI,CAACC,EAAd,CADL,CAEE,SAAS,CAAED,IAAI,CAACC,EAFlB,CAGE,WAAW,CAAED,IAAI,CAACE,IAHpB,CAIE,WAAW,CAAEF,IAAI,CAACG,IAJpB,CAKE,aAAa,CAAEH,IAAI,CAACI,MALtB,CAME,aAAa,CAAEJ,IAAI,CAACK,MANtB,CAOE,qBAAqB,CAAEL,IAAI,CAACM,cAP9B,CAQE,aAAa,CAAEN,IAAI,CAACO,OARtB,EADkB,EAApB,CADA,CAaAV,mBAAmB,CAACE,GAApB,CAAwB,SAAAC,IAAI,QAC1B,KAAC,WAAD,EACE,GAAG,eAASA,IAAI,CAACC,EAAd,CADL,CAEE,SAAS,CAAED,IAAI,CAACC,EAFlB,CAGE,WAAW,CAAED,IAAI,CAACE,IAHpB,CAIE,WAAW,CAAEF,IAAI,CAACG,IAJpB,CAKE,aAAa,CAAEH,IAAI,CAACI,MALtB,CAME,aAAa,CAAEJ,IAAI,CAACK,MANtB,CAOE,qBAAqB,CAAEL,IAAI,CAACM,cAP9B,CAQE,aAAa,CAAEN,IAAI,CAACO,OARtB,EAD0B,EAA5B,CAnBN,CADF,CADF,CADF,CAsCD,CAlDD,CAoDA,cAAeb,CAAAA,YAAf","sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\n\nimport PokemonCard from \"./components/PokemonCard\"\n\nimport { useState, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  fetchPokemonNameUrl,\n  selectorFilteredPokemon,\n  selectorPokemon,\n} from \"./pokemonCardsSlice\"\n\nconst PokemonCards = () => {\n  const dispatch = useDispatch()\n  // A state array that contains all the pokemon fetched from the API.\n  const pokemonList = useSelector(selectorPokemon)\n  // A state array that contains an array of pokemon that match the search filter.\n  const filteredPokemonList = useSelector(selectorFilteredPokemon)\n\n  // Fetch pokemon by dispatching the action.\n  useEffect(() => {\n    dispatch(fetchPokemonNameUrl())\n  }, [dispatch])\n\n  return (\n    <div tw=\"p-2 md:p-4\">\n      <ul>\n        <div tw=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-2 md:gap-3 lg:gap-4\">\n          {/* If \"xxx\" is present in the 0th position of the state array, return \"No pokemon found.\" */}\n          {/* Else If \"xxx\" is not returned and the length of the state is 0, then return all the pokemon. */}\n          {/* Else return pokemon that match the search filter.*/}\n          {filteredPokemonList[0] === \"xxx\"\n            ? \"No Pokemon found.\"\n            : filteredPokemonList.length === 0\n            ? pokemonList.map(poke => (\n                <PokemonCard\n                  key={`key-${poke.id}`}\n                  pokemonId={poke.id}\n                  pokemonName={poke.name}\n                  pokemonType={poke.type}\n                  pokemonHeight={poke.height}\n                  pokemonWeight={poke.weight}\n                  pokemonBaseExperience={poke.baseExperience}\n                  pokemonSprite={poke.sprites}\n                />\n              ))\n            : filteredPokemonList.map(poke => (\n                <PokemonCard\n                  key={`key-${poke.id}`}\n                  pokemonId={poke.id}\n                  pokemonName={poke.name}\n                  pokemonType={poke.type}\n                  pokemonHeight={poke.height}\n                  pokemonWeight={poke.weight}\n                  pokemonBaseExperience={poke.baseExperience}\n                  pokemonSprite={poke.sprites}\n                />\n              ))}\n        </div>\n      </ul>\n    </div>\n  )\n}\n\nexport default PokemonCards\n"]},"metadata":{},"sourceType":"module"}