{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  isLoading: false,\n  hasErrors: false,\n  pokemon: []\n};\nconst URL = \"https://pokeapi.co/api/v2/pokemon?limit=10\";\nexport const pokemonCardsSlice = createSlice({\n  name: \"pokemonCards\",\n  initialState: initialState,\n  reducers: {\n    getPokemon: state => {\n      state.isLoading = true;\n    },\n    getPokemonSuccess: (state, action) => {\n      state.isLoading = false;\n      state.hasErrors = false;\n      state.pokemonsList = action.payload;\n    },\n    getPokemonFailure: state => {\n      state.isLoading = false;\n      state.hasErrors = true;\n    }\n  }\n});\nexport const {\n  getPokemon,\n  getPokemonSuccess,\n  getPokemonFailure\n} = pokemonCardsSlice.actions; // useEffect(() => {\n//   try {\n//     const fetchPokemon = async () => {\n//       const result = await axios.get(URL)\n//       setPokeData(result.data.results)\n//     }\n//     fetchPokemon()\n//   } catch (e) {\n//     console.log(\"Error fetching pokemon list.\")\n//   }\n// }, [])\n\nexport const fetchPokemon = () => {\n  return async dispatch => {\n    getPokemon();\n\n    try {\n      const response = await axios.get(URL).data.results;\n      dispatch(getPokemonSuccess(response));\n    } catch (e) {\n      dispatch(getPokemonFailure);\n    }\n  };\n};\nexport const pokemonList = state => state.pokemonsList.value;\nexport default pokemonCardsSlice.reducer;","map":{"version":3,"sources":["/home/akshaj/projects_js/pokedex/src/features/explore/pokemonCardsSlice.js"],"names":["createSlice","axios","initialState","isLoading","hasErrors","pokemon","URL","pokemonCardsSlice","name","reducers","getPokemon","state","getPokemonSuccess","action","pokemonsList","payload","getPokemonFailure","actions","fetchPokemon","dispatch","response","get","data","results","e","pokemonList","value","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,SAAS,EAAE,KAFQ;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAMA,MAAMC,GAAG,GAAG,4CAAZ;AAEA,OAAO,MAAMC,iBAAiB,GAAGP,WAAW,CAAC;AAC3CQ,EAAAA,IAAI,EAAE,cADqC;AAE3CN,EAAAA,YAAY,EAAEA,YAF6B;AAG3CO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAEC,KAAK,IAAI;AACnBA,MAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACD,KAHO;AAIRS,IAAAA,iBAAiB,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACpCF,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB;AACAO,MAAAA,KAAK,CAACG,YAAN,GAAqBD,MAAM,CAACE,OAA5B;AACD,KARO;AASRC,IAAAA,iBAAiB,EAAEL,KAAK,IAAI;AAC1BA,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACP,SAAN,GAAkB,IAAlB;AACD;AAZO;AAHiC,CAAD,CAArC;AAmBP,OAAO,MAAM;AACXM,EAAAA,UADW;AAEXE,EAAAA,iBAFW;AAGXI,EAAAA;AAHW,IAITT,iBAAiB,CAACU,OAJf,C,CAMP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,SAAO,MAAMC,QAAN,IAAkB;AACvBT,IAAAA,UAAU;;AACV,QAAI;AACF,YAAMU,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAUf,GAAV,EAAegB,IAAf,CAAoBC,OAA3C;AACAJ,MAAAA,QAAQ,CAACP,iBAAiB,CAACQ,QAAD,CAAlB,CAAR;AACD,KAHD,CAGE,OAAOI,CAAP,EAAU;AACVL,MAAAA,QAAQ,CAACH,iBAAD,CAAR;AACD;AACF,GARD;AASD,CAVM;AAYP,OAAO,MAAMS,WAAW,GAAGd,KAAK,IAAIA,KAAK,CAACG,YAAN,CAAmBY,KAAhD;AAEP,eAAenB,iBAAiB,CAACoB,OAAjC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\nimport axios from \"axios\"\n\nconst initialState = {\n  isLoading: false,\n  hasErrors: false,\n  pokemon: [],\n}\n\nconst URL = \"https://pokeapi.co/api/v2/pokemon?limit=10\"\n\nexport const pokemonCardsSlice = createSlice({\n  name: \"pokemonCards\",\n  initialState: initialState,\n  reducers: {\n    getPokemon: state => {\n      state.isLoading = true\n    },\n    getPokemonSuccess: (state, action) => {\n      state.isLoading = false\n      state.hasErrors = false\n      state.pokemonsList = action.payload\n    },\n    getPokemonFailure: state => {\n      state.isLoading = false\n      state.hasErrors = true\n    },\n  },\n})\n\nexport const {\n  getPokemon,\n  getPokemonSuccess,\n  getPokemonFailure,\n} = pokemonCardsSlice.actions\n\n// useEffect(() => {\n//   try {\n//     const fetchPokemon = async () => {\n//       const result = await axios.get(URL)\n//       setPokeData(result.data.results)\n//     }\n//     fetchPokemon()\n//   } catch (e) {\n//     console.log(\"Error fetching pokemon list.\")\n//   }\n// }, [])\n\nexport const fetchPokemon = () => {\n  return async dispatch => {\n    getPokemon()\n    try {\n      const response = await axios.get(URL).data.results\n      dispatch(getPokemonSuccess(response))\n    } catch (e) {\n      dispatch(getPokemonFailure)\n    }\n  }\n}\n\nexport const pokemonList = state => state.pokemonsList.value\n\nexport default pokemonCardsSlice.reducer\n"]},"metadata":{},"sourceType":"module"}