{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nlet collectionId = 1;\nconst initialState = {\n  collectionList: []\n};\nexport const collectionSlice = createSlice({\n  name: \"collection\",\n  initialState: initialState,\n  reducers: {\n    create: (state, action) => {\n      state.collectionList.push({\n        id: collectionId,\n        name: action.payload,\n        pokemons: []\n      });\n      collectionId++;\n    },\n    add: (state, action) => {\n      const collectionListIndex = state.collectionList.findIndex(x => x.id === action.payload.id);\n\n      if (collectionListIndex !== -1) {\n        state.collectionList[collectionListIndex].pokemons.push(action.payload.pokemon);\n      }\n    },\n    remove: (state, action) => {\n      const collectionIdToRemove = action.payload.id;\n      const CollectionIdRemoveIndex = state.collectionList.findIndex(col => col.id === collectionIdToRemove);\n\n      if (CollectionIdRemoveIndex !== -1) {\n        state.collectionList.splice(CollectionIdRemoveIndex, 1);\n      }\n    },\n    edit: (state, action) => {\n      const collectionIdToEdit = action.payload.id;\n      const editedName = action.payload.editedName;\n      const CollectionIdEditIndex = state.collectionList.findIndex(col => col.id === collectionIdToEdit);\n      state.collectionList;\n    }\n  }\n});\nexport const selectorCollection = state => state.collection.collectionList;\nexport const {\n  create,\n  add,\n  remove\n} = collectionSlice.actions;\nexport default collectionSlice.reducer;","map":{"version":3,"sources":["/home/akshaj/projects_js/pokedex/src/features/home/collectionSlice.js"],"names":["createSlice","collectionId","initialState","collectionList","collectionSlice","name","reducers","create","state","action","push","id","payload","pokemons","add","collectionListIndex","findIndex","x","pokemon","remove","collectionIdToRemove","CollectionIdRemoveIndex","col","splice","edit","collectionIdToEdit","editedName","CollectionIdEditIndex","selectorCollection","collection","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,IAAIC,YAAY,GAAG,CAAnB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE;AADG,CAArB;AAIA,OAAO,MAAMC,eAAe,GAAGJ,WAAW,CAAC;AACzCK,EAAAA,IAAI,EAAE,YADmC;AAEzCH,EAAAA,YAAY,EAAEA,YAF2B;AAGzCI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzBD,MAAAA,KAAK,CAACL,cAAN,CAAqBO,IAArB,CAA0B;AACxBC,QAAAA,EAAE,EAAEV,YADoB;AAExBI,QAAAA,IAAI,EAAEI,MAAM,CAACG,OAFW;AAGxBC,QAAAA,QAAQ,EAAE;AAHc,OAA1B;AAKAZ,MAAAA,YAAY;AACb,KARO;AASRa,IAAAA,GAAG,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACtB,YAAMM,mBAAmB,GAAGP,KAAK,CAACL,cAAN,CAAqBa,SAArB,CAC1BC,CAAC,IAAIA,CAAC,CAACN,EAAF,KAASF,MAAM,CAACG,OAAP,CAAeD,EADH,CAA5B;;AAIA,UAAII,mBAAmB,KAAK,CAAC,CAA7B,EAAgC;AAC9BP,QAAAA,KAAK,CAACL,cAAN,CAAqBY,mBAArB,EAA0CF,QAA1C,CAAmDH,IAAnD,CACED,MAAM,CAACG,OAAP,CAAeM,OADjB;AAGD;AACF,KAnBO;AAoBRC,IAAAA,MAAM,EAAE,CAACX,KAAD,EAAQC,MAAR,KAAmB;AACzB,YAAMW,oBAAoB,GAAGX,MAAM,CAACG,OAAP,CAAeD,EAA5C;AAEA,YAAMU,uBAAuB,GAAGb,KAAK,CAACL,cAAN,CAAqBa,SAArB,CAC9BM,GAAG,IAAIA,GAAG,CAACX,EAAJ,KAAWS,oBADY,CAAhC;;AAIA,UAAIC,uBAAuB,KAAK,CAAC,CAAjC,EAAoC;AAClCb,QAAAA,KAAK,CAACL,cAAN,CAAqBoB,MAArB,CAA4BF,uBAA5B,EAAqD,CAArD;AACD;AACF,KA9BO;AA+BRG,IAAAA,IAAI,EAAE,CAAChB,KAAD,EAAQC,MAAR,KAAmB;AACvB,YAAMgB,kBAAkB,GAAGhB,MAAM,CAACG,OAAP,CAAeD,EAA1C;AACA,YAAMe,UAAU,GAAGjB,MAAM,CAACG,OAAP,CAAec,UAAlC;AAEA,YAAMC,qBAAqB,GAAGnB,KAAK,CAACL,cAAN,CAAqBa,SAArB,CAC5BM,GAAG,IAAIA,GAAG,CAACX,EAAJ,KAAWc,kBADU,CAA9B;AAGAjB,MAAAA,KAAK,CAACL,cAAN;AACD;AAvCO;AAH+B,CAAD,CAAnC;AA8CP,OAAO,MAAMyB,kBAAkB,GAAGpB,KAAK,IAAIA,KAAK,CAACqB,UAAN,CAAiB1B,cAArD;AACP,OAAO,MAAM;AAAEI,EAAAA,MAAF;AAAUO,EAAAA,GAAV;AAAeK,EAAAA;AAAf,IAA0Bf,eAAe,CAAC0B,OAAhD;AACP,eAAe1B,eAAe,CAAC2B,OAA/B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\n\nlet collectionId = 1\n\nconst initialState = {\n  collectionList: [],\n}\n\nexport const collectionSlice = createSlice({\n  name: \"collection\",\n  initialState: initialState,\n  reducers: {\n    create: (state, action) => {\n      state.collectionList.push({\n        id: collectionId,\n        name: action.payload,\n        pokemons: [],\n      })\n      collectionId++\n    },\n    add: (state, action) => {\n      const collectionListIndex = state.collectionList.findIndex(\n        x => x.id === action.payload.id\n      )\n\n      if (collectionListIndex !== -1) {\n        state.collectionList[collectionListIndex].pokemons.push(\n          action.payload.pokemon\n        )\n      }\n    },\n    remove: (state, action) => {\n      const collectionIdToRemove = action.payload.id\n\n      const CollectionIdRemoveIndex = state.collectionList.findIndex(\n        col => col.id === collectionIdToRemove\n      )\n\n      if (CollectionIdRemoveIndex !== -1) {\n        state.collectionList.splice(CollectionIdRemoveIndex, 1)\n      }\n    },\n    edit: (state, action) => {\n      const collectionIdToEdit = action.payload.id\n      const editedName = action.payload.editedName\n\n      const CollectionIdEditIndex = state.collectionList.findIndex(\n        col => col.id === collectionIdToEdit\n      )\n      state.collectionList\n    },\n  },\n})\n\nexport const selectorCollection = state => state.collection.collectionList\nexport const { create, add, remove } = collectionSlice.actions\nexport default collectionSlice.reducer\n"]},"metadata":{},"sourceType":"module"}