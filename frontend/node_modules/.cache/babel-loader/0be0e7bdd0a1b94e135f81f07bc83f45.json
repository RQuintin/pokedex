{"ast":null,"code":"import _objectWithoutProperties from\"/home/akshaj/projects_js/pokedex/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";/** @jsx jsx */ /** @jsxFrag React.Fragment */import{jsx,css}from\"@emotion/core\";import\"tailwindcss/dist/base.css\";import{BrowserRouter as Router,Switch,Route,Redirect,useHistory,useLocation}from\"react-router-dom\";import React,{Fragment,Component}from\"react\";import{useSelector}from\"react-redux\";import Navbar from\"./components/Navbar\";import Landing from\"./features/landing/Landing\";import Home from\"./features/home/Home\";import Explore from\"./features/explore/Explore\";import{selectorAuth}from\"./authSlice\";var PrivateRoute=function PrivateRoute(_ref){var Component=_ref.component,authState=_ref.authState,rest=_objectWithoutProperties(_ref,[\"component\",\"authState\"]);return jsx(Route,Object.assign({},rest,{render:function render(props){return authState.isUserLoggedIn?jsx(Component,props):jsx(Redirect,{to:{pathname:\"/\",state:{from:props.location}}});}}));};var App=function App(){var authState=useSelector(selectorAuth);return jsx(Router,null,jsx(\"div\",{css:{\"display\":\"flex\",\"flexDirection\":\"column\",\"--bg-opacity\":\"1\",\"backgroundColor\":\"rgba(240, 255, 244, var(--bg-opacity))\",\"minHeight\":\"100vh\"}},jsx(Navbar,null),jsx(Switch,null,jsx(Route,{exact:true,path:\"/\",component:Landing}),jsx(PrivateRoute,{path:\"/home\",component:Home,authState:authState}),jsx(PrivateRoute,{path:\"/explore\",component:Explore,authState:authState}))));};export default App;","map":{"version":3,"sources":["/home/akshaj/projects_js/pokedex/frontend/src/App.js"],"names":["jsx","css","BrowserRouter","Router","Switch","Route","Redirect","useHistory","useLocation","React","Fragment","Component","useSelector","Navbar","Landing","Home","Explore","selectorAuth","PrivateRoute","component","authState","rest","props","isUserLoggedIn","pathname","state","from","location","App"],"mappings":"oLAAA,e,CACA,8BACA,OAASA,GAAT,CAAcC,GAAd,KAAyB,eAAzB,CAEA,MAAO,2BAAP,CAEA,OACEC,aAAa,GAAIC,CAAAA,MADnB,CAEEC,MAFF,CAGEC,KAHF,CAIEC,QAJF,CAKEC,UALF,CAMEC,WANF,KAOO,kBAPP,CASA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,aAA5B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,4BAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,4BAApB,CAEA,OAASC,YAAT,KAA6B,aAA7B,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAkD,IAApCP,CAAAA,SAAoC,MAA/CQ,SAA+C,CAAzBC,SAAyB,MAAzBA,SAAyB,CAAXC,IAAW,0DACrE,MACE,KAAC,KAAD,kBACMA,IADN,EAEE,MAAM,CAAE,gBAAAC,KAAK,QACXF,CAAAA,SAAS,CAACG,cAAV,CACE,IAAC,SAAD,CAAeD,KAAf,CADF,CAGE,IAAC,QAAD,EACE,EAAE,CAAE,CACFE,QAAQ,CAAE,GADR,CAEFC,KAAK,CAAE,CAAEC,IAAI,CAAEJ,KAAK,CAACK,QAAd,CAFL,CADN,EAJS,EAFf,GADF,CAiBD,CAlBD,CAoBA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAChB,GAAMR,CAAAA,SAAS,CAAGR,WAAW,CAACK,YAAD,CAA7B,CACA,MACE,KAAC,MAAD,MACE,8JACE,IAAC,MAAD,MADF,CAEE,IAAC,MAAD,MACE,IAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAEH,OAAjC,EADF,CAEE,IAAC,YAAD,EAAc,IAAI,CAAC,OAAnB,CAA2B,SAAS,CAAEC,IAAtC,CAA4C,SAAS,CAAEK,SAAvD,EAFF,CAGE,IAAC,YAAD,EACE,IAAI,CAAC,UADP,CAEE,SAAS,CAAEJ,OAFb,CAGE,SAAS,CAAEI,SAHb,EAHF,CAFF,CADF,CADF,CAgBD,CAlBD,CAoBA,cAAeQ,CAAAA,GAAf","sourcesContent":["/** @jsx jsx */\r\n/** @jsxFrag React.Fragment */\r\nimport { jsx, css } from \"@emotion/core\"\r\nimport tw from \"twin.macro\"\r\nimport \"tailwindcss/dist/base.css\"\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useHistory,\r\n  useLocation,\r\n} from \"react-router-dom\"\r\n\r\nimport React, { Fragment, Component } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport Navbar from \"./components/Navbar\"\r\nimport Landing from \"./features/landing/Landing\"\r\nimport Home from \"./features/home/Home\"\r\nimport Explore from \"./features/explore/Explore\"\r\n\r\nimport { selectorAuth } from \"./authSlice\"\r\n\r\nconst PrivateRoute = ({ component: Component, authState, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        authState.isUserLoggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const authState = useSelector(selectorAuth)\r\n  return (\r\n    <Router>\r\n      <div tw=\"flex flex-col bg-green-100 min-h-screen\">\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Landing} />\r\n          <PrivateRoute path=\"/home\" component={Home} authState={authState} />\r\n          <PrivateRoute\r\n            path=\"/explore\"\r\n            component={Explore}\r\n            authState={authState}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}