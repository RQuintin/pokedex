{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const NUMBER_OF_POKEMON = 10;\nconst URL = `https://pokeapi.co/api/v2/pokemon?limit=${NUMBER_OF_POKEMON}`;\nconst initialState = {\n  pokemonList: []\n};\n\nconst pokemonExists = (arr, val) => {\n  return arr.some(arrVal => val === arrVal);\n};\n\nexport const pokemonCardsSlice = createSlice({\n  name: \"pokemonCards\",\n  initialState: initialState,\n  reducers: {\n    add: (state, action) => {\n      const existingPokeIds = state.pokemonList.map(poke => poke.id);\n\n      if (!pokemonExists(existingPokeIds, action.payload.id)) {\n        state.pokemonList.push(action.payload);\n      }\n    }\n  }\n});\nexport const {\n  add\n} = pokemonCardsSlice.actions; // export const fetchPokemonNameUrl = () => {\n//   return async dispatch => {\n//     try {\n//       const response = await axios.get(URL)\n//       const data = response.data.results\n//       data.map(async poke => {\n//         const responseDetails = await axios.get(poke.url)\n//         let tempDetails = {\n//           id: responseDetails.data.id,\n//           name: responseDetails.data.species.name,\n//           baseExperience: responseDetails.data.base_experience,\n//           height: responseDetails.data.height,\n//           weight: responseDetails.data.weight,\n//           type: responseDetails.data.types[0].type.name,\n//           sprites: responseDetails.data.sprites.front_default,\n//         }\n//         dispatch(add(tempDetails))\n//       })\n//     } catch (e) {\n//       console.log(\"Could not fetch data.\")\n//     }\n//   }\n// }\n\nconst fetchPokemonNameUrl = async dispatch => {\n  const response = await axios.get(URL);\n  const data = response.data.results;\n  data.map(async poke => {\n    const responseDetails = await axios.get(poke.url);\n    let tempDetails = {\n      name: responseDetails.data.species.name,\n      baseExperience: responseDetails.data.base_experience,\n      height: responseDetails.data.height,\n      weight: responseDetails.data.weight,\n      type: responseDetails.data.types[0].type.name,\n      sprites: responseDetails.data.sprites.front_default\n    };\n    dispatch(getData(tempDetails));\n  });\n}; // And call it:\n\n\nuseEffect(() => {\n  if (pokemonList.length !== NUMBER_OF_POKEMON) {\n    fetchPokemonNameUrl(dispatch);\n  }\n}, [dispatch, pokemonList]);\nexport const selectorPokemon = state => state.pokemon.pokemonList;\nexport default pokemonCardsSlice.reducer;","map":{"version":3,"sources":["/home/akshaj/projects_js/pokedex/src/features/explore/pokemonCardsSlice.js"],"names":["createSlice","axios","NUMBER_OF_POKEMON","URL","initialState","pokemonList","pokemonExists","arr","val","some","arrVal","pokemonCardsSlice","name","reducers","add","state","action","existingPokeIds","map","poke","id","payload","push","actions","fetchPokemonNameUrl","dispatch","response","get","data","results","responseDetails","url","tempDetails","species","baseExperience","base_experience","height","weight","type","types","sprites","front_default","getData","useEffect","length","selectorPokemon","pokemon","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,EAA1B;AAEP,MAAMC,GAAG,GAAI,2CAA0CD,iBAAkB,EAAzE;AAEA,MAAME,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AADM,CAArB;;AAIA,MAAMC,aAAa,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClC,SAAOD,GAAG,CAACE,IAAJ,CAASC,MAAM,IAAIF,GAAG,KAAKE,MAA3B,CAAP;AACD,CAFD;;AAIA,OAAO,MAAMC,iBAAiB,GAAGX,WAAW,CAAC;AAC3CY,EAAAA,IAAI,EAAE,cADqC;AAE3CR,EAAAA,YAAY,EAAEA,YAF6B;AAG3CS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,GAAG,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtB,YAAMC,eAAe,GAAGF,KAAK,CAACV,WAAN,CAAkBa,GAAlB,CAAsBC,IAAI,IAAIA,IAAI,CAACC,EAAnC,CAAxB;;AACA,UAAI,CAACd,aAAa,CAACW,eAAD,EAAkBD,MAAM,CAACK,OAAP,CAAeD,EAAjC,CAAlB,EAAwD;AACtDL,QAAAA,KAAK,CAACV,WAAN,CAAkBiB,IAAlB,CAAuBN,MAAM,CAACK,OAA9B;AACD;AACF;AANO;AAHiC,CAAD,CAArC;AAaP,OAAO,MAAM;AAAEP,EAAAA;AAAF,IAAUH,iBAAiB,CAACY,OAAlC,C,CAEP;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,mBAAmB,GAAG,MAAMC,QAAN,IAAkB;AAC5C,QAAMC,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAN,CAAUxB,GAAV,CAAvB;AACA,QAAMyB,IAAI,GAAGF,QAAQ,CAACE,IAAT,CAAcC,OAA3B;AAEAD,EAAAA,IAAI,CAACV,GAAL,CAAS,MAAMC,IAAN,IAAc;AACrB,UAAMW,eAAe,GAAG,MAAM7B,KAAK,CAAC0B,GAAN,CAAUR,IAAI,CAACY,GAAf,CAA9B;AAEA,QAAIC,WAAW,GAAG;AAChBpB,MAAAA,IAAI,EAAEkB,eAAe,CAACF,IAAhB,CAAqBK,OAArB,CAA6BrB,IADnB;AAEhBsB,MAAAA,cAAc,EAAEJ,eAAe,CAACF,IAAhB,CAAqBO,eAFrB;AAGhBC,MAAAA,MAAM,EAAEN,eAAe,CAACF,IAAhB,CAAqBQ,MAHb;AAIhBC,MAAAA,MAAM,EAAEP,eAAe,CAACF,IAAhB,CAAqBS,MAJb;AAKhBC,MAAAA,IAAI,EAAER,eAAe,CAACF,IAAhB,CAAqBW,KAArB,CAA2B,CAA3B,EAA8BD,IAA9B,CAAmC1B,IALzB;AAMhB4B,MAAAA,OAAO,EAAEV,eAAe,CAACF,IAAhB,CAAqBY,OAArB,CAA6BC;AANtB,KAAlB;AASAhB,IAAAA,QAAQ,CAACiB,OAAO,CAACV,WAAD,CAAR,CAAR;AACD,GAbD;AAcD,CAlBD,C,CAoBA;;;AACAW,SAAS,CAAC,MAAM;AACd,MAAItC,WAAW,CAACuC,MAAZ,KAAuB1C,iBAA3B,EAA8C;AAC5CsB,IAAAA,mBAAmB,CAACC,QAAD,CAAnB;AACD;AACF,CAJQ,EAIN,CAACA,QAAD,EAAWpB,WAAX,CAJM,CAAT;AAMA,OAAO,MAAMwC,eAAe,GAAG9B,KAAK,IAAIA,KAAK,CAAC+B,OAAN,CAAczC,WAA/C;AAEP,eAAeM,iBAAiB,CAACoC,OAAjC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\nimport axios from \"axios\"\n\nexport const NUMBER_OF_POKEMON = 10\n\nconst URL = `https://pokeapi.co/api/v2/pokemon?limit=${NUMBER_OF_POKEMON}`\n\nconst initialState = {\n  pokemonList: [],\n}\n\nconst pokemonExists = (arr, val) => {\n  return arr.some(arrVal => val === arrVal)\n}\n\nexport const pokemonCardsSlice = createSlice({\n  name: \"pokemonCards\",\n  initialState: initialState,\n  reducers: {\n    add: (state, action) => {\n      const existingPokeIds = state.pokemonList.map(poke => poke.id)\n      if (!pokemonExists(existingPokeIds, action.payload.id)) {\n        state.pokemonList.push(action.payload)\n      }\n    },\n  },\n})\n\nexport const { add } = pokemonCardsSlice.actions\n\n// export const fetchPokemonNameUrl = () => {\n//   return async dispatch => {\n//     try {\n//       const response = await axios.get(URL)\n//       const data = response.data.results\n\n//       data.map(async poke => {\n//         const responseDetails = await axios.get(poke.url)\n\n//         let tempDetails = {\n//           id: responseDetails.data.id,\n//           name: responseDetails.data.species.name,\n//           baseExperience: responseDetails.data.base_experience,\n//           height: responseDetails.data.height,\n//           weight: responseDetails.data.weight,\n//           type: responseDetails.data.types[0].type.name,\n//           sprites: responseDetails.data.sprites.front_default,\n//         }\n\n//         dispatch(add(tempDetails))\n//       })\n//     } catch (e) {\n//       console.log(\"Could not fetch data.\")\n//     }\n//   }\n// }\n\nconst fetchPokemonNameUrl = async dispatch => {\n  const response = await axios.get(URL)\n  const data = response.data.results\n\n  data.map(async poke => {\n    const responseDetails = await axios.get(poke.url)\n\n    let tempDetails = {\n      name: responseDetails.data.species.name,\n      baseExperience: responseDetails.data.base_experience,\n      height: responseDetails.data.height,\n      weight: responseDetails.data.weight,\n      type: responseDetails.data.types[0].type.name,\n      sprites: responseDetails.data.sprites.front_default,\n    }\n\n    dispatch(getData(tempDetails))\n  })\n}\n\n// And call it:\nuseEffect(() => {\n  if (pokemonList.length !== NUMBER_OF_POKEMON) {\n    fetchPokemonNameUrl(dispatch)\n  }\n}, [dispatch, pokemonList])\n\nexport const selectorPokemon = state => state.pokemon.pokemonList\n\nexport default pokemonCardsSlice.reducer\n"]},"metadata":{},"sourceType":"module"}