{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const NUMBER_OF_POKEMON = 10;\nconst URL = `https://pokeapi.co/api/v2/pokemon?limit=${NUMBER_OF_POKEMON}`;\nconst initialState = {\n  pokemonList: [],\n  filteredPokemonList: []\n};\n\nconst pokemonExists = (arr, val) => {\n  return arr.some(arrVal => val === arrVal);\n};\n\nexport const pokemonCardsSlice = createSlice({\n  name: \"pokemonCards\",\n  initialState: initialState,\n  reducers: {\n    add: (state, action) => {\n      const existingPokeIds = state.pokemonList.map(poke => poke.id);\n\n      if (!pokemonExists(existingPokeIds, action.payload.id)) {\n        state.pokemonList.push(action.payload);\n      }\n    },\n    search: (state, action) => {\n      const searchTerm = action.payload;\n\n      if (searchTerm === \"\") {\n        state.filteredPokemonList = state.pokemonList;\n      } else {\n        const filteredList = state.pokemonList.filter(poke => poke.name.includes(searchTerm));\n        console.log(filteredList);\n        state.filteredPokemonList = filteredList;\n      }\n    }\n  }\n});\nexport const {\n  add,\n  search\n} = pokemonCardsSlice.actions;\nexport const fetchPokemonNameUrl = () => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(URL);\n      const data = response.data.results;\n      data.map(async poke => {\n        const responseDetails = await axios.get(poke.url);\n        let tempDetails = {\n          id: responseDetails.data.id,\n          name: responseDetails.data.species.name,\n          baseExperience: responseDetails.data.base_experience,\n          height: responseDetails.data.height,\n          weight: responseDetails.data.weight,\n          type: responseDetails.data.types[0].type.name,\n          sprites: responseDetails.data.sprites.front_default\n        };\n        dispatch(add(tempDetails));\n      });\n    } catch (e) {\n      console.log(\"Could not fetch data.\");\n    }\n  };\n};\nexport const selectorPokemon = state => state.pokemon.pokemonList;\nexport const selectorFilteredPokemon = state => state.pokemon.filteredPokemonList;\nexport default pokemonCardsSlice.reducer;","map":{"version":3,"sources":["/home/akshaj/projects_js/pokedex/src/features/explore/pokemonCardsSlice.js"],"names":["createSlice","axios","NUMBER_OF_POKEMON","URL","initialState","pokemonList","filteredPokemonList","pokemonExists","arr","val","some","arrVal","pokemonCardsSlice","name","reducers","add","state","action","existingPokeIds","map","poke","id","payload","push","search","searchTerm","filteredList","filter","includes","console","log","actions","fetchPokemonNameUrl","dispatch","response","get","data","results","responseDetails","url","tempDetails","species","baseExperience","base_experience","height","weight","type","types","sprites","front_default","e","selectorPokemon","pokemon","selectorFilteredPokemon","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\nimport axios from \"axios\"\n\nexport const NUMBER_OF_POKEMON = 10\n\nconst URL = `https://pokeapi.co/api/v2/pokemon?limit=${NUMBER_OF_POKEMON}`\n\nconst initialState = {\n  pokemonList: [],\n  filteredPokemonList: [],\n}\n\nconst pokemonExists = (arr, val) => {\n  return arr.some(arrVal => val === arrVal)\n}\n\nexport const pokemonCardsSlice = createSlice({\n  name: \"pokemonCards\",\n  initialState: initialState,\n  reducers: {\n    add: (state, action) => {\n      const existingPokeIds = state.pokemonList.map(poke => poke.id)\n      if (!pokemonExists(existingPokeIds, action.payload.id)) {\n        state.pokemonList.push(action.payload)\n      }\n    },\n    search: (state, action) => {\n      const searchTerm = action.payload\n      if (searchTerm === \"\") {\n        state.filteredPokemonList = state.pokemonList\n      } else {\n        const filteredList = state.pokemonList.filter(poke =>\n          poke.name.includes(searchTerm)\n        )\n        console.log(filteredList)\n        state.filteredPokemonList = filteredList\n      }\n    },\n  },\n})\n\nexport const { add, search } = pokemonCardsSlice.actions\n\nexport const fetchPokemonNameUrl = () => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(URL)\n      const data = response.data.results\n\n      data.map(async poke => {\n        const responseDetails = await axios.get(poke.url)\n\n        let tempDetails = {\n          id: responseDetails.data.id,\n          name: responseDetails.data.species.name,\n          baseExperience: responseDetails.data.base_experience,\n          height: responseDetails.data.height,\n          weight: responseDetails.data.weight,\n          type: responseDetails.data.types[0].type.name,\n          sprites: responseDetails.data.sprites.front_default,\n        }\n\n        dispatch(add(tempDetails))\n      })\n    } catch (e) {\n      console.log(\"Could not fetch data.\")\n    }\n  }\n}\n\nexport const selectorPokemon = state => state.pokemon.pokemonList\nexport const selectorFilteredPokemon = state =>\n  state.pokemon.filteredPokemonList\n\nexport default pokemonCardsSlice.reducer\n"]},"metadata":{},"sourceType":"module"}